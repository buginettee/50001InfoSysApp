package com.example.app50001;

/*
this will be a dud class to store code you need to add things nicely to the database

How to use:

Just copy and paste the code into which activity file that will be executed and change the content you want
to have pre-added into the database


you need an instance of both DatabaseReference and FirebaseAuth

Code starts:

    private DatabaseReference dbreference;
    private FirebaseAuth dbauth;

    @RequiresApi(api = Build.VERSION_CODES.O)
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        //calling instances of auth and reference
        dbauth = FirebaseAuth.getInstance();
        dbreference = FirebaseDatabase.getInstance().getReference();


        //if you want to add a complete profile with all attributes available (users)
        FirebaseUser currentuser = dbauth.getCurrentUser();
        String currentUID = currentuser.getUid();

        DatabaseReference userRef = dbreference.child("Profiles").child(currentUID);

        String email = currentuser.getEmail();

        HashMap<String, Object> AdminOf = new HashMap<>();
        adminOf.put("Box32", "Address of Box32");

        HashMap<String, Object> GuestOf = new HashMap<>();
        guestOf.put("Box32", "Address of Box32");

        HashMap<String, Object> DeliveryOf = new HashMap<>();
        deliveryOf.put("Box32", "Address of Box32");

        HashMap<String, Object> boxAccessed = new HashMap<>();
        boxAccessed.put("Box10", "Address of Box10");

        HashMap<String, Object> UserHistoryOf = new HashMap<>();
        userHistoryOf.put("2019-11-26", boxAccessed);

        HashMap<String, Object> DeliveryHistoryOf = new HashMap<>();
        deliveryHistoryOf.put("2019-04-27", boxAccessed);

        userRef.setValue(new Profiles("DisplayName",
                email,
                "Address",
                "Additional Information for Delivery",
                "Delivery ID if any",
                "Company Name if any",
                AdminOf,
                GuestOf,
                DeliveryOf,
                UserHistoryOf,
                DeliveryHistoryOf));

        HashMap<String, Object> newAccess = new HashMap<>();
        newAccess.put("Box18", "new Address");

        LocalDate date = java.time.LocalDate.now();

        userRef.child("AdminOf").updateChildren(newAccess);

        userRef.child("GuestOf").updateChildren(newAccess);

        userRef.child("DeliveryOf").updateChildren(newAccess);

        userRef.child("AccessHistoryOfProfile").child(date.toString()).updateChildren(newAccess);

        userRef.child("DeliveryHistoryOfProfile").child(date.toString()).updateChildren(newAccess);


        //if you want to add a new box

        dbauth = FirebaseAuth.getInstance();
        dbreference = FirebaseDatabase.getInstance().getReference();


        DatabaseReference boxRef = dbreference.child("Boxes");

        String BoxNo = "Box32";

        HashMap<String, Object> AdminAccess = new HashMap<>();
        AdminAccess.put("DisplayName", "UID generated by FireBase");

        HashMap<String, Object> GuestAccess = new HashMap<>();
        GuestAccess.put("DisplayName", "UID generated by FireBase");

        HashMap<String, Object> DeliveryAccess = new HashMap<>();
        DeliveryAccess.put("DUID", "UID generated by FireBase");

        boxRef.child(BoxNo).setValue(new Boxes(AdminAccess,
                GuestAccess,
                DeliveryAccess,
                "Address",
                true,
                false,
                "Locked",
                "Fly"

        ));


        HashMap<String, Object> NewAccess = new HashMap<>();
        NewAccess.put("DisplayName", "New UID");

        HashMap<String, Object> NewDeliveryAccess = new HashMap<>();
        NewDeliveryAccess.put("DUID", "New UID");


        boxRef.child(BoxNo).child("AdminAccess").updateChildren(NewAccess);

        boxRef.child(BoxNo).child("GuestAccess").updateChildren(NewAccess);

        boxRef.child(BoxNo).child("DeliveryAccess").updateChildren(NewDeliveryAccess);

 */